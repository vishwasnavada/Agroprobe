// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>


const char THING_ID[] = "bd8dabbf-0314-464c-9afd-724bea51b721";

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_PASS;    // Network password (use for WPA, or use as key for WEP)

void onMoistureChange();
void onElephantMovementChange();
void onStandingChange();
void onEarthquakeChange();
void onDeforestationChange();

CloudPercentage moisture;
CloudPercentage elephant_movement;
CloudPercentage standing;
CloudPercentage earthquake;
CloudPercentage deforestation;

void initProperties(){

  ArduinoCloud.setThingId(THING_ID);
  ArduinoCloud.addProperty(moisture, READWRITE, 1 * SECONDS, onMoistureChange);
  ArduinoCloud.addProperty(elephant_movement, READWRITE, ON_CHANGE, onElephantMovementChange);
  ArduinoCloud.addProperty(standing, READWRITE, ON_CHANGE, onStandingChange);
  ArduinoCloud.addProperty(earthquake, READWRITE, ON_CHANGE, onEarthquakeChange);
  ArduinoCloud.addProperty(deforestation, READWRITE, ON_CHANGE, onDeforestationChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);


#if defined(BOARD_HAS_WIFI)
//  WiFiConnectionHandler ArduinoIoTPreferredConnection(SECRET_SSID, SECRET_PASS);
#elif defined(BOARD_HAS_GSM)
  GSMConnectionHandler ArduinoIoTPreferredConnection(SECRET_PIN, SECRET_APN, SECRET_LOGIN, SECRET_PASS);
#elif defined(BOARD_HAS_LORA)
  LoRaConnectionHandler ArduinoIoTPreferredConnection(SECRET_APP_EUI, SECRET_APP_KEY, _lora_band::EU868, _lora_class::CLASS_A);
#elif defined(BOARD_HAS_NB)
  NBConnectionHandler ArduinoIoTPreferredConnection(SECRET_PIN, SECRET_APN, SECRET_LOGIN, SECRET_PASS);
#endif
